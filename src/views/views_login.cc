//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "views_login.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace views;
using namespace drogon;
std::string login::genText(const DrTemplateData& login_view_data)
{
	drogon::OStringStream login_tmp_stream;
	std::string layoutName{""};
	login_tmp_stream << "<!DOCTYPE html>\n";
	login_tmp_stream << "<html>\n";
	login_tmp_stream << "<head>\n";
	login_tmp_stream << "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n";
	login_tmp_stream << "<style>\n";
	login_tmp_stream << "body {font-family: Arial, Helvetica, sans-serif;}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Full-width input fields */\n";
	login_tmp_stream << "input[type=text], input[type=password] {\n";
	login_tmp_stream << "  width: 100%;\n";
	login_tmp_stream << "  padding: 12px 20px;\n";
	login_tmp_stream << "  margin: 8px 0;\n";
	login_tmp_stream << "  display: inline-block;\n";
	login_tmp_stream << "  border: 1px solid #ccc;\n";
	login_tmp_stream << "  box-sizing: border-box;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Set a style for all buttons */\n";
	login_tmp_stream << "button {\n";
	login_tmp_stream << "  background-color: #04AA6D;\n";
	login_tmp_stream << "  color: white;\n";
	login_tmp_stream << "  padding: 14px 20px;\n";
	login_tmp_stream << "  margin: 8px 0;\n";
	login_tmp_stream << "  border: none;\n";
	login_tmp_stream << "  cursor: pointer;\n";
	login_tmp_stream << "  width: 100%;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "button:hover {\n";
	login_tmp_stream << "  opacity: 0.8;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Extra styles for the cancel button */\n";
	login_tmp_stream << ".cancelbtn {\n";
	login_tmp_stream << "  width: auto;\n";
	login_tmp_stream << "  padding: 10px 18px;\n";
	login_tmp_stream << "  background-color: #f44336;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Center the image and position the close button */\n";
	login_tmp_stream << ".imgcontainer {\n";
	login_tmp_stream << "  text-align: center;\n";
	login_tmp_stream << "  margin: 24px 0 12px 0;\n";
	login_tmp_stream << "  position: relative;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "img.avatar {\n";
	login_tmp_stream << "  width: 40%;\n";
	login_tmp_stream << "  border-radius: 50%;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << ".container {\n";
	login_tmp_stream << "  padding: 16px;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "span.psw {\n";
	login_tmp_stream << "  float: right;\n";
	login_tmp_stream << "  padding-top: 16px;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* The Modal (background) */\n";
	login_tmp_stream << ".modal {\n";
	login_tmp_stream << "  display: none; /* Hidden by default */\n";
	login_tmp_stream << "  position: fixed; /* Stay in place */\n";
	login_tmp_stream << "  z-index: 1; /* Sit on top */\n";
	login_tmp_stream << "  left: 0;\n";
	login_tmp_stream << "  top: 0;\n";
	login_tmp_stream << "  width: 100%; /* Full width */\n";
	login_tmp_stream << "  height: 100%; /* Full height */\n";
	login_tmp_stream << "  overflow: auto; /* Enable scroll if needed */\n";
	login_tmp_stream << "  background-color: rgb(0,0,0); /* Fallback color */\n";
	login_tmp_stream << "  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */\n";
	login_tmp_stream << "  padding-top: 60px;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Modal Content/Box */\n";
	login_tmp_stream << ".modal-content {\n";
	login_tmp_stream << "  background-color: #fefefe;\n";
	login_tmp_stream << "  margin: 5% auto 15% auto; /* 5% from the top, 15% from the bottom and centered */\n";
	login_tmp_stream << "  border: 1px solid #888;\n";
	login_tmp_stream << "  width: 80%; /* Could be more or less, depending on screen size */\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* The Close Button (x) */\n";
	login_tmp_stream << ".close {\n";
	login_tmp_stream << "  position: absolute;\n";
	login_tmp_stream << "  right: 25px;\n";
	login_tmp_stream << "  top: 0;\n";
	login_tmp_stream << "  color: #000;\n";
	login_tmp_stream << "  font-size: 35px;\n";
	login_tmp_stream << "  font-weight: bold;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << ".close:hover,\n";
	login_tmp_stream << ".close:focus {\n";
	login_tmp_stream << "  color: red;\n";
	login_tmp_stream << "  cursor: pointer;\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Add Zoom Animation */\n";
	login_tmp_stream << ".animate {\n";
	login_tmp_stream << "  -webkit-animation: animatezoom 0.6s;\n";
	login_tmp_stream << "  animation: animatezoom 0.6s\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "@-webkit-keyframes animatezoom {\n";
	login_tmp_stream << "  from {-webkit-transform: scale(0)} \n";
	login_tmp_stream << "  to {-webkit-transform: scale(1)}\n";
	login_tmp_stream << "}\n";
	login_tmp_stream << "  \n";
	login_tmp_stream << "@keyframes animatezoom {\n";
	login_tmp_stream << "  from {transform: scale(0)} \n";
	login_tmp_stream << "  to {transform: scale(1)}\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "/* Change styles for span and cancel button on extra small screens */\n";
	login_tmp_stream << "@media screen and (max-width: 300px) {\n";
	login_tmp_stream << "  span.psw {\n";
	login_tmp_stream << "     display: block;\n";
	login_tmp_stream << "     float: none;\n";
	login_tmp_stream << "  }\n";
	login_tmp_stream << "  .cancelbtn {\n";
	login_tmp_stream << "     width: 100%;\n";
	login_tmp_stream << "  }\n";
	login_tmp_stream << "}\n";
	login_tmp_stream << "</style>\n";
	login_tmp_stream << "</head>\n";
	login_tmp_stream << "<body>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "<h2>Modal Login Form</h2>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "<button onclick=\"document.getElementById('id01').style.display='block'\" style=\"width:auto;\">Login</button>\n";
	login_tmp_stream << "<button onclick=\"callWebAPI('http://localhost/user')\" style=\"width:auto;\">Users</button>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "<div id=\"id01\" class=\"modal\">\n";
	login_tmp_stream << "  \n";
	login_tmp_stream << "  <form class=\"modal-content animate\" id=\"formLogin\">\n";
	login_tmp_stream << "    <div class=\"imgcontainer\">\n";
	login_tmp_stream << "      <span onclick=\"document.getElementById('id01').style.display='none'\" class=\"close\" title=\"Close Modal\">&times;</span>\n";
	login_tmp_stream << "      <img src=\"img_avatar2.png\" alt=\"Avatar\" class=\"avatar\">\n";
	login_tmp_stream << "    </div>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "    <div class=\"container\">\n";
	login_tmp_stream << "      <label for=\"email\"><b>Username</b></label>\n";
	login_tmp_stream << "      <input type=\"text\" placeholder=\"Enter Username\" name=\"email\" required>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "      <label for=\"password\"><b>Password</b></label>\n";
	login_tmp_stream << "      <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" required>\n";
	login_tmp_stream << "        \n";
	login_tmp_stream << "      <button type=\"button\" onclick=\"getToken()\">Login</button>\n";
	login_tmp_stream << "      <label>\n";
	login_tmp_stream << "        <input type=\"checkbox\" checked=\"checked\" name=\"remember\"> Remember me\n";
	login_tmp_stream << "      </label>\n";
	login_tmp_stream << "    </div>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "    <div class=\"container\" style=\"background-color:#f1f1f1\">\n";
	login_tmp_stream << "      <button type=\"button\" onclick=\"document.getElementById('id01').style.display='none'\" class=\"cancelbtn\">Cancel</button>\n";
	login_tmp_stream << "      <span class=\"psw\">Forgot <a href=\"#\">password?</a></span>\n";
	login_tmp_stream << "    </div>\n";
	login_tmp_stream << "  </form>\n";
	login_tmp_stream << "</div>\n";
	login_tmp_stream << "<div id=\"idview\" class=\"view\">\n";
	login_tmp_stream << "</div>\n";
	login_tmp_stream << "<script>\n";
	login_tmp_stream << "// Get the modal\n";
	login_tmp_stream << "var modal = document.getElementById('id01');\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "// When the user clicks anywhere outside of the modal, close it\n";
	login_tmp_stream << "window.onclick = function(event) {\n";
	login_tmp_stream << "    if (event.target == modal) {\n";
	login_tmp_stream << "        modal.style.display = \"none\";\n";
	login_tmp_stream << "    }\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "var token_ ;\n";
	login_tmp_stream << "var request = new XMLHttpRequest(); \n";
login_tmp_stream<<"\n";
	login_tmp_stream << "function getToken() {\n";
	login_tmp_stream << "	const data = new FormData(document.getElementById(\"formLogin\"));\n";
	login_tmp_stream << "	const value = Object.fromEntries(data.entries());\n";
	login_tmp_stream << "	var url = \"http://localhost/api/v1/auth/login\";\n";
	login_tmp_stream << "    var key;           \n";
	login_tmp_stream << "    request.open(\"POST\", url, true); \n";
	login_tmp_stream << "    request.setRequestHeader(\"Content-type\", \"application/json\");\n";
	login_tmp_stream << "    request.send(JSON.stringify(value));\n";
	login_tmp_stream << "    request.onreadystatechange = function () {\n";
	login_tmp_stream << "        if (request.readyState == request.DONE) {\n";
	login_tmp_stream << "            var response = request.responseText;\n";
	login_tmp_stream << "            var obj = JSON.parse(response); \n";
	login_tmp_stream << "            key = obj.token;\n";
	login_tmp_stream << "            token_ = key;\n";
	login_tmp_stream << "        	modal.style.display = \"none\";\n";
	login_tmp_stream << "        }\n";
	login_tmp_stream << "    }\n";
	login_tmp_stream << "}\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "function callWebAPI(url) {\n";
	login_tmp_stream << "    var request_ = new XMLHttpRequest();        \n";
	login_tmp_stream << "    request_.open(\"GET\", url, true);\n";
	login_tmp_stream << "    request_.setRequestHeader(\"Authorization\", \"Bearer \"+ token_);\n";
	login_tmp_stream << "    request_.send();\n";
	login_tmp_stream << "    request_.onreadystatechange = function () {\n";
	login_tmp_stream << "        if (request_.readyState == 4 && request_.status == 200) {\n";
	login_tmp_stream << "            var response = request_.responseText;\n";
	login_tmp_stream << "            var obj = JSON.parse(response); \n";
	login_tmp_stream << "            document.getElementById(\"idview\").innerHTML = response;\n";
	login_tmp_stream << "        }\n";
	login_tmp_stream << "    }\n";
	login_tmp_stream << "} \n";
	login_tmp_stream << "</script>\n";
login_tmp_stream<<"\n";
	login_tmp_stream << "</body>\n";
	login_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(login_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = login_view_data;
auto str = std::move(login_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
